#! /bin/bash
set -x
# Script for building packages with BredOS patches

# Make temp dir
# Get the pkg using pullpkg.sh pkgname
# patch it using /patches/pkgname.patch
# build it using makepkg

usage() {
    echo "Usage: $0 [-g] <package>"
}

generate_patch=0

# Parse options
while getopts ":g" opt; do
  case ${opt} in
    g )
      generate_patch=1
      ;;
    \? )
      echo "Invalid option: $OPTARG" 1>&2
      usage
      exit 1
      ;;
  esac
done
shift $((OPTIND -1))

# Check if the package name is empty
if [ -z "$1" ]; then
    echo "Error: Package name is missing."
    usage
    exit 1
fi

# Script dir (expand it to full path)
script_dir=$(realpath $(dirname "$0"))
localpkgs="lib32-glibc|lib32-xtrans|lib32-xorgproto|lib32-vulkan-headers|lib32-mesa-panfork-git|lib32-valgrind|lib32-nss|lib32-libmysofa|lib32-cunit|lib32-directx-headers|lib32-libomxil-bellagio"
localpkgs_without_makepkg_conf="arm32-binutils|arm32-gcc|arm32-linux-api-headers|arm32-gcc-bootstrap|arm32-filesystem"
# Get the package name
package="$1"

# Make temp dir
tempdir=$(mktemp -d)


# Pull the PKGBUILD
if [[ $package =~ $localpkgs ]]; then
    cd "$tempdir"
    cp -r "$script_dir"/"$package" .
    cd "$package"
    makepkg -srAfi --nocheck --noconfirm --skippgpcheck --config=$script_dir/makepkg.conf --skipchecksums
elif [[ $package =~ $localpkgs_without_makepkg_conf ]]; then
    cd "$tempdir"
    cp -r "$script_dir"/"$package" .
    cd "$package"
    makepkg -srAfi --nocheck --noconfirm --skippgpcheck --skipchecksums
else
    if [ $generate_patch -eq 1 ]; then
      "$script_dir"/genpatch "$package"
    fi
    cd "$tempdir"
    "$script_dir"/pullpkg "$package"
    cd "$package"
    "$script_dir"/applypatch "$package"
    makepkg -srAfi --nocheck --noconfirm --skippgpcheck --config=$script_dir/makepkg.conf --skipchecksums
fi

echo "Done."

pacman -Ql "$package"