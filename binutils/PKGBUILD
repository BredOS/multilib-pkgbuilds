# Maintainer: Giancarlo Razzolini <grazzolini@archlinux.org>
# Maintainer: Frederik Schwan <freswa at archlinux dot org>
# Contributor:  Bart≈Çomiej Piotrowski <bpiotrowski@archlinux.org>
# Contributor: Allan McRae <allan@archlinux.org>

# toolchain build order: linux-api-headers->glibc->binutils->gcc->glibc->binutils->gcc

pkgname=arm32-binutils
pkgver=2.40
_target=armv7h-linux-gnueabihf
_commit=0dc8f96598ae1facd1933323e0c633b1ed3ca4e7
pkgrel=6
pkgdesc='A set of programs to assemble and manipulate binary and object files for the ARM32 target'
arch=(aarch64)
url='https://www.gnu.org/software/binutils/'
license=('GPL3' 'GPL' 'FDL1.3' 'custom:FSFAP')
depends=(lib32-glibc libelf zlib zstd)
makedepends=(git)
options=(staticlibs !distcc !ccache)
source=(git+https://sourceware.org/git/binutils-gdb.git#commit=${_commit}
        gold-warn-unsupported.patch)
sha256sums=('SKIP'
            '2d430b66f84a19c154725ec535280c493be1d34f1a90f95208dce02fecd0e4e4')
validpgpkeys=(3A24BC1E8FB409FA9F14371813FCEF89DD9E3C4F)

prepare() {
  [[ ! -d binutils-gdb ]] && ln -s binutils-${pkgver} binutils-gdb
  mkdir -p binutils-build

  cd binutils-gdb

  # Turn off development mode (-Werror, gas run-time checks, date in sonames)
  sed -i '/^development=/s/true/false/' bfd/development.sh

  # Creds @Fedora
  # Change the gold configuration script to only warn about
  # unsupported targets.  This allows the binutils to be built with
  # BPF support enabled.
  patch -Np1 -i "${srcdir}"/gold-warn-unsupported.patch
}

build() {
  cd binutils-build

  "${srcdir}"/binutils-gdb/configure \
    --prefix=/usr \
    --target=${_target} \
    --sysconfdir="${pkgdir}"/etc \
    --with-lib-path=/usr/li32b:/usr/local/lib32 \
    --libdir=/usr/lib32 \
    --includedir=/usr/include32 \
    --with-bugurl=https://github.com/BredOS/multilib-pkgbuilds/issues \
    --enable-default-execstack=no \
    --enable-deterministic-archives \
    --enable-gold \
    --enable-install-libiberty \
    --enable-jansson \
    --enable-ld=default \
    --enable-new-dtags \
    --enable-plugins \
    --enable-relro \
    --enable-shared \
    --enable-threads \
    --disable-gdb \
    --disable-gdbserver \
    --disable-libdecnumber \
    --disable-readline \
    --disable-sim \
    --disable-werror \
    --with-debuginfod \
    --with-pic \
    --with-system-zlib 

  make -O tooldir=/usr

  # Extract the FSF All Permissive License
  # <https://www.gnu.org/prep/maintain/html_node/License-Notices-for-Other-Files.html>
  # used for some linker scripts.
  tail -n 5 "${srcdir}"/binutils-gdb/ld/scripttempl/README > FSFAP
}

package() {
  cd binutils-build
  make DESTDIR="$pkgdir" install

  # install PIC version of libiberty
  rm -rf "${pkgdir}"/usr/lib/libiberty.a
  install -m644 libiberty/pic/libiberty.a "${pkgdir}"/usr/lib32

  # Remove unneeded binaries
  rm -rf "${pkgdir}"/usr/bin/{ar,as,nm,objcopy,objdump,ranlib,readelf,strip}

  # No shared linking to these files outside binutils
  rm -f "${pkgdir}"/usr/lib32/lib{bfd,opcodes}.so
  
  # Remove /usr/share/ since lib32
  rm -rf "${pkgdir:?}"/usr/share

  tee "${pkgdir}"/usr/lib32/libbfd.so << EOS
/* GNU ld script */

INPUT( /usr/lib32/libbfd.a -lsframe -liberty -lz -lzstd -ldl )
EOS

  tee "${pkgdir}"/usr/lib32/libopcodes.so << EOS
/* GNU ld script */

INPUT( /usr/lib32/libopcodes.a -lbfd )
EOS
}
